@startuml

/' Интерфейсы периферии МК '/
abstract class PinBase {
	{abstract}{method}+	void	set		( void )
	{abstract}{method}+	void	reset		( void )
	{abstract}{method}+	void	toggle	( void )
	{abstract}{method}+	void	set		( bool	state )
	{abstract}{method}+	void	set		( int		state )
	{abstract}{method}+	void	set		( uint8_t	state )
	{abstract}{method}+	read			( void )
}

abstract class PinMultifuncBase {
	{abstract}{method}+	bool	reinit		( uint32_t	numberCfg )
}

abstract class PinMultifuncItBase {
	{abstract}{method}+	bool	checkIt	( void )
	{abstract}{method}+	void	clearIt	( void )
}

abstract class Port8bitBase {
	{abstract}{method}+	void		write		( uint8_t	data )
	{abstract}{method}+	void		reset		( void )
	{abstract}{method}+	void		toggle	( void )	
	{abstract}{method}+	uint8_t	read		( void )	
}

abstract class GlobalPortBase {
	{abstract}{method}+	BaseResult		reinitAllPorts	( void )
}

abstract class WdtBase {
	{abstract}{method}+	BaseResult		reinit			( uint32_t numberCfg = 0 )
	{abstract}{method}+	void			reset			( void )	
	{abstract}{method}+	void			resetService	( void )
}

abstract class UartBase {
	{abstract}{method}+	BaseResult		reinit				( uint32_t			numberCfg		= 0 )
	{abstract}{method}+	BaseResult		on				( void )	
	{abstract}{method}+	void			off				( void )
	{abstract}{method}+	BaseResult		tx				( const uint8_t*		const txArray,\n\t\t\t\t\t\t\t  uint16_t			length		= 1,\n\t\t\t\t\t\t\t  uint32_t			timeoutMs		= 100 )
	{abstract}{method}+	BaseResult		getByte			( uint8_t*			retrunData,\n\t\t\t\t\t\t\t  uint32_t			timeoutMs		= 100 )
	{abstract}{method}+	BaseResult		getByteWitchout		( uint8_t* 			retrunData )

}

abstract class TimInterruptBase {
	{abstract}{method}+	BaseResult		reinit				( uint32_t	numberCfg = 0 )
	{abstract}{method}+	BaseResult		setState			( bool	state )
	{abstract}{method}+	BaseResult		on				( void )
	{abstract}{method}+	void			off				( void )
	{abstract}{method}+	void			clearInterruptFlag	( void )
}

abstract class TimPwmOneChannelBase {
	{abstract}{method}+	BaseResult		reinit		( uint32_t	numberCfg = 0 )
	{abstract}{method}+	BaseResult		on		( void )
	{abstract}{method}+	void			off		( void )	
	{abstract}{method}+	void			setDuty	( float	duty )
}

abstract class SpiMaster8BitBase {	
	{abstract}{method}+	BaseResult		reinit			( uint32_t			numberCfg			= 0 )
	{abstract}{method}+	BaseResult		on			( void )
	{abstract}{method}+	void			off			( void )	
	{abstract}{method}+	BaseResult		tx			( const uint8_t*		const txArray,\n\t\t\t\t\t\t  uint16_t			length			= 1,\n\t\t\t\t\t\t  uint32_t			timeoutMs			= 100	)
	{abstract}{method}+	BaseResult		tx			( const uint8_t*		const txArray,\n\t\t\t\t\t\t  uint8_t*			rxArray,\n\t\t\t\t\t\t  uint16_t			length			= 1,\n\t\t\t\t\t\t  uint32_t			timeoutMs			= 100	)
	{abstract}{method}+	BaseResult		txOneItem 		( uint8_t			txByte,\n\t\t\t\t\t\t  uint16_t			count				= 1,\n\t\t\t\t\t\t  uint32_t			timeoutMs			= 100	)
	{abstract}{method}+	BaseResult		rx			( uint8_t*			rxArray,\n\t\t\t\t\t\t  uint16_t			length			= 1,\n\t\t\t\t\t\t  uint32_t			timeoutMs			= 100,\n\t\t\t\t\t\t  uint8_t			outValue			= 0xFF )
	{abstract}{method}+	BaseResult		setPrescaler	( uint32_t 			prescalerNumber	= 0	)
}

abstract class RccBase {
	{abstract}{method}+	RccResult	setCfg	( uint32_t numberCfg = 0 )
}

abstract class PwrBase {
	{abstract}{method}+	BaseResult		reinit			( uint32_t numberCfg = 0 )
	{abstract}{method}+	void			pvdEnable		( void )	
	{abstract}{method}+	void			pvdDisable		( void )
}

abstract class AdcOneChannelBase {
	{abstract}{method}+	BaseResult		reinit						( uint32_t numberCfg = 0 )
	{abstract}{method}+	BaseResult		startContinuousConversion		( void )
	{abstract}{method}+	void			stopContinuousConversion		( void )
	{abstract}{method}+	uint32_t		getMeasurement				( void )
}

/'
abstract class {
	{abstract}{method}+	
}
'/


@enduml